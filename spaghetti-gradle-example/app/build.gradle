apply plugin: "spaghetti-haxe"

configurations {
	requirejs
	main { extendsFrom modules }
}

dependencies {
	modules project(path: ":core", configuration: "modules")
	modulesObf project(path: ":core", configuration: "modulesObf")
	modules project(path: ":layout", configuration: "modules")
	modulesObf project(path: ":layout", configuration: "modulesObf")
	modules project(path: ":text-renderer", configuration: "modules")
	modulesObf project(path: ":text-renderer", configuration: "modulesObf")
	requirejs "org.webjars:requirejs:2.1.8"

	test group: "haxelib3", name: "hamcrest", version: "1.2.1"
	test group: "haxelib3", name: "mconsole", version: "1.6.0"
	test group: "haxelib3", name: "mcover", version: "2.0.3"
	test group: "haxelib3", name: "mlib", version: "2.0.2"
	test group: "haxelib3", name: "munit", version: "2.1.0"
	test group: "haxelib3", name: "tink_core", version: "1.0.0-beta4"
	test group: "haxelib3", name: "tink_macro", version: "0.1.1-beta"
	test group: "haxelib3", name: "mockatoo", version: "2.1.1-haxe31"
}

spaghetti {
	language "haxe"
}

haxe {
	include "prezi.test.client"
	targetPlatforms {
		js
	}
}

def bundleTask = hasProperty("obfuscated") ? obfuscateJsModule : bundleJsModule
def config = hasProperty("obfuscated") ? configurations.modulesObf : configurations.modules

task packageAmdApplication(type: com.prezi.spaghetti.gradle.PackageApplication) {
	dependsOn bundleTask
	dependentModules config
	dependentModule bundleTask.outputDirectory
	mainModule "prezi.test.client"
	outputDirectory "${buildDir}/applications/web"
	prefix "src/main/spaghetti/prefix.js"
	suffix "src/main/spaghetti/suffix.js"
	type "requirejs"
}

task packageNodeApplication(type: com.prezi.spaghetti.gradle.PackageApplication) {
	dependsOn bundleTask
	dependentModules config
	dependentModule bundleTask.outputDirectory
	mainModule "prezi.test.client"
	outputDirectory "${buildDir}/applications/node"
	prefix "src/main/spaghetti/prefix.js"
	suffix "src/main/spaghetti/suffix.js"
	type "node"
}

task packageSingleFileApplication(type: com.prezi.spaghetti.gradle.PackageApplication) {
	dependsOn bundleTask
	dependentModules config
	dependentModule bundleTask.outputDirectory
	mainModule "prezi.test.client"
	outputDirectory "${buildDir}/applications/single"
	prefix "src/main/spaghetti/prefix.js"
	suffix "src/main/spaghetti/suffix.js"
	type "single"
}

def testWebappDir = file("${buildDir}/webapp")

task packageWebApplication(type: Copy) {
	dependsOn packageAmdApplication
	dependsOn configurations.requirejs

	destinationDir testWebappDir

	from packageAmdApplication.outputDirectory
	from "src/test/webapp"

	doLast {
		configurations.requirejs.files.each { zipFile ->
			zipTree(zipFile).each { file ->
				if (file.name == "require.js") {
					def output = new File(testWebappDir, "require.js")
					output << file.text
				}
			}
		}
	}
}

task packAllApplications {
	dependsOn packageNodeApplication
	dependsOn packageSingleFileApplication
	dependsOn packageWebApplication
}

build {
	dependsOn packAllApplications
}
