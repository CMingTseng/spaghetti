package com.prezi.spaghetti.packaging

import com.prezi.spaghetti.Version

class SingleFileWrapperTest extends WrapperTestBase {
	def "Single file module"() {
		def originalScript = "/* Generated by Spaghetti */ function(SpaghettiConfiguration){}"
		def result = new SingleFileWrapper().wrap(mockParams("com.example.test", "1.0", ["com.example.alma", "com.example.bela"], originalScript))

		expect:
		result == [
		        'function(){',
					'/* Generated by Spaghetti */ ',
					'return{',
						'"module":',
							'(',
								'function(SpaghettiConfiguration){}\n',
							')',
							'.call({},(function(args){',
								'var baseUrl=__dirname;',
								'return{',
									'getSpaghettiVersion:function(){return "' + Version.SPAGHETTI_BUILD + '";},',
									'getName:function(){',
										'return "com.example.test";',
									'},',
									'getVersion:function(){return "1.0";},',
									'getResourceUrl:function(resource){',
										'if(resource.substr(0,1)!="/"){',
											'resource="/"+resource;',
										'}',
										'return baseUrl+resource;',
									'},',
									'"modules":{',
										'"com.example.alma":args[0],',
										'"com.example.bela":args[1]',
									'}',
								'};',
							'})(arguments)),',
						'"version":"1.0",',
						'"spaghettiVersion":"' + Version.SPAGHETTI_BUILD + '"',
					'};',
				'}'
		].join("")
	}

	def "Single file application"() {
		def dependencyTree = [
				"com.example.test": ["com.example.alma", "com.example.bela"].toSet(),
				"com.example.alma": ["com.example.bela"].toSet(),
				"com.example.bela": [].toSet()
		]
		def result = new SingleFileWrapper().makeApplication(dependencyTree, "com.example.test", true)

		expect:
		result == [
				'modules["com.example.test"]["module"]["main"]();'
		].join("")
	}
}
