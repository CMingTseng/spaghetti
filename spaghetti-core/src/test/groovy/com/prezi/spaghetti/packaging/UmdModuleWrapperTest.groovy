package com.prezi.spaghetti.packaging

import com.prezi.spaghetti.internal.Version
import com.prezi.spaghetti.packaging.internal.UmdModuleWrapper

class UmdModuleWrapperTest extends WrapperTestBase {
	def "UMD module"() {
		def originalScript = "/* Generated by Spaghetti */ module(function(Spaghetti){})"
		def result = new UmdModuleWrapper().wrap(mockParams("com.example.test", "1.0", ["com.example.alma", "com.example.bela"], ["React": "react", "\$": "jquery"], originalScript))

		expect:
		result == [
				';(function(){',
				'var baseUrl;',
				'var __factory=function(){',
					'var module=(function(dependencies){',
						'return function(init){',
							'return init.call({},(function(){',
								'return{',
									'getSpaghettiVersion:function(){return "' + Version.SPAGHETTI_VERSION + '";},',
									'getModuleName:function(){',
										'return "com.example.test";',
									'},',
									'getModuleVersion:function(){return "1.0";},',
									'getResourceUrl:function(resource){',
										'if(resource.substr(0,1)!="/"){',
											'resource="/"+resource;',
										'}',
										'return baseUrl+resource;',
									'},',
									'"dependencies":{',
										'"com.example.alma":dependencies[2],',
										'"com.example.bela":dependencies[3]',
									'}',
								'};',
							'})());',
						'};',
					'})(arguments);',
					'var $=arguments[0];',
					'var React=arguments[1];',
					'/* Generated by Spaghetti */ ',
					'return{',
						'"module":(function(){return module(function(Spaghetti){})\n})(),',
						'"version":"1.0",',
						'"spaghettiVersion":"' + Version.SPAGHETTI_VERSION + '"',
					'};',
				'};',
				'if(typeof define==="function"&&define.amd){',
					'define(["require","jquery","react","com.example.alma","com.example.bela"],function(){',
						'var moduleUrl=arguments[0]["toUrl"]("com.example.test.js");',
						'baseUrl=moduleUrl.substr(0,moduleUrl.lastIndexOf("/"));',
						'return(__factory).apply({},[].slice.call(arguments,1));',
					'});',
				'}else if(typeof exports==="object"&&typeof exports.nodeName!=="string"){',
					'baseUrl=__dirname;',
					'module.exports=(__factory)(require("jquery"),require("react"),require("com.example.alma"),require("com.example.bela"));',
				'}',
				'})();'
		].join("")
	}

	def "UMD application"() {
		def dependencyTree = [
				"com.example.test": ["com.example.alma", "com.example.bela"].toSet(),
				"com.example.alma": ["com.example.bela"].toSet(),
				"com.example.bela": [].toSet()
		]
		def externals = [
				"react": "react"
		]
		def result = new UmdModuleWrapper().makeApplication(dependencyTree, "modules", "com.example.test", true, externals)

		expect:
		result == [
				'if(typeof define==="function"&&define.amd){',
					'require["config"]({',
						'"baseUrl":".",',
						'"paths":{',
							'"com.example.alma":"modules/com.example.alma/com.example.alma",',
							'"com.example.bela":"modules/com.example.bela/com.example.bela",',
							'"com.example.test":"modules/com.example.test/com.example.test",',
							'"react":"react"',
						'}',
					'});',
				'}',
				'if(typeof define==="function"&&define.amd){',
					'require(["com.example.test"],function(__mainModule){',
						'__mainModule["module"]["main"]();',
					'});',
				'}else if(typeof exports==="object"&&typeof exports.nodeName!=="string"){',
					'require("com.example.test")["module"]["main"]();',
				'}',
				'\n'
		].join("")
	}
}
