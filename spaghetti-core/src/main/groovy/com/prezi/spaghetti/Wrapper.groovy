package com.prezi.spaghetti
/**
 * Created by lptr on 11/12/13.
 */
class Wrapper {
	public static String wrap(Iterable<String> dependentModuleNames, Wrapping wrapping, String contents) {
		switch (wrapping) {
			case Wrapping.application:
				return wrapAsRequireJsModule(dependentModuleNames, "require", contents)
			case Wrapping.module:
				return wrapAsRequireJsModule(dependentModuleNames, "define", contents)
			case Wrapping.nodeModule:
				return wrapAsNodeJsModule(dependentModuleNames, contents)
		}
	}

	private static String wrapAsRequireJsModule(Iterable<String> moduleNames, String function, String contents) {
		def fileNames = moduleNames.collect { moduleName ->
			return "\"${moduleName}\""
		}
		def modules = []
		moduleNames.eachWithIndex { moduleName, index ->
			modules.push(""""${moduleName}": arguments[${index}]""")
		}
		return """/* Generated by Spaghetti */ ${function}([${fileNames.join(",")}], function() { var __modules = { ${modules.join(",")} }; ${contents}
});
"""
	}

	private static String wrapAsNodeJsModule(Iterable<String> moduleNames, String contents) {
		def requires = moduleNames.collect { moduleName ->
			""""${moduleName}": __requirejs("${moduleName}")"""
		}
		return """/* Generated by Spaghetti */ var __requirejs = require("requirejs"); var __modules = { ${requires.join(",")} }; ${contents}"""
	}
}
