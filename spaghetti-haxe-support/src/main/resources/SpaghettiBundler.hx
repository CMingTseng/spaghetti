class SpaghettiBundler
{
	static public function main()
	{
#if neko
		var args = Sys.args();
		if (args.length < 2)
		{
			printUsage();
			Sys.exit(1);
		}
		var type = args.shift();
		var call = switch (type)
		{
			case "module" :
				"define";
			case "application" :
				"require";
			default:
				throw 'Bundle type should be either "module" or "application": ${type}';
		}
		var fileName = args.shift();
		var modulePaths = [];
		var moduleNames = ['"require"'];
		var modules = ['"require": arguments[0]'];
		for (i in 0...args.length) {
			var modulePath = args[i];
			var moduleName:String;
			var slashIdx = modulePath.lastIndexOf("/");
			if (slashIdx == -1) {
				moduleName = modulePath;
			} else {
				moduleName = modulePath.substr(slashIdx + 1);
			}
			moduleNames.push('"${moduleName}"');
			modulePaths.push('"${moduleName}": "${modulePath}"');
			modules.push('"${moduleName}": arguments[${i + 1}]');
		}

		var haxe = sys.io.File.getContent(fileName);
		var contents = '/* Generated by Spaghetti */ require.config({paths:{${modulePaths.join(",")}}}); ${call}([ ${moduleNames.join(",")} ], function() { var __modules = { ${modules.join(",")} }; var __module; ${haxe}
return __module;
});
';
		sys.io.File.saveContent(fileName, contents);
#end
	}

	static function printUsage()
	{
		Sys.println("usage: haxe --run SpaghttiBundler <module|application> <javascript-file> [<module-names>]");
	}
}
