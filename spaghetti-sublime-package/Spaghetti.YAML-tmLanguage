# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Spaghetti syntax
scopeName: source.spaghetti
fileTypes: [ "module" ]
uuid: 5ad0d2f7-e9e3-49d1-affb-3bcf4c90fb06

patterns:
- name: "definition.type.spaghetti"
  match: "\\b(interface|enum|struct|module)\\s+(\\w+)(?:\\s+(extends)\\s+(\\w+))?"
  captures:
    "1":
      name: "storage.type.definition.spaghetti"
    "2":
      name: "entity.name.class.spaghetti"
    "3":
      name: "storage.type.definition.spaghetti"
    "4":
      name: "entity.name.class.spaghetti"

- name: "definition.method.spaghetti"
  begin: "\\b(\\w+)\\s*((?:\\[\\])*)\\s+(\\w+)\\s?(?=\\()"
  end: "\\)"
  captures:
    "1":
      name: "storage.type.source.spaghetti"
    "2":
      name: "keyword.operator.spaghetti"
    "3":
      name: "entity.name.function.spaghetti"
  patterns:
  - include: '#builtInTypes'

- name: "comment.line.double-slash.spaghetti"
  match: "(//).*$\\n?"
  captures:
    "1":
      name: "punctuation.definition.comment.spaghetti"

- name: "comment.block.documentation.spaghetti"
  begin: "/\\*\\*"
  end: "\\*/"
  captures:
    "0":
      name: "punctuation.definition.comment.spaghetti"

- name: "comment.block.spaghetti"
  begin: "/\\*"
  end: "\\*/"
  captures:
    "0":
      name: "punctuation.definition.comment.spaghetti"

- name: "meta.brace.square.spaghetti"
  match: "\\[|\\]\\(\\)"

repository:
  builtInTypes:
    patterns:
    - name: "storage.type.source.spaghetti"
      match: "\\b(void|bool|float|int|String|any)\\b"
      captures:
        "1":
          name: "keyword.type.spaghetti"
    - name: "meta.definition.param-list.source.spaghetti"
      begin: "\\("
      end: "(?=\\))"
      patterns:
      - include: '#builtInTypes'