module spaghetti.test as TestModule {

	import spaghetti.test.dependency.Fruit;
	import spaghetti.test.dependency.Prime;
	import spaghetti.test.dependency.Point2d;

	/**
	 * This enum should be exported on the compiled module.
	 */
	enum Exported {
		Target = 42,
		Another = 12
	}

	/**
	 * Add the two numbers and return the result.
	 */
	addTwoNumbers(a: int, b: int): int;

	/**
	 * Take the given enum value, and return the next value in the Fruit enum.
	 * The enum is declared in the DependencyModule module.
	 */
	getNextEnumValue(value: Fruit): Fruit;

	/**
	 * Return the position for the first three primes.
	 */
	getPositionInPrimes(value: Prime): string;

	const Numbers {
		ZERO = 0;
		ONE = 1;
		TWO = "two";
	}

	/**
	 * Return the value of the constant "TWO" defined in right above Numbers.
	 */
	getValueOfTwo(): string;

	getValueOfDependentConstant(): string;

	struct Point3d extends Point2d {
		z: int;
	}

	/**
	 * Create an instance of the Point3d type, and assign the parameters to its fields.
	 */
	createPoint3dWithGivenValues(x: int, y: int, z: int): Point3d;

	/**
	 * Return the Point2d created by DependencyModule.getPoint().
	 */
	getPointFromDependencyModule(): Point2d;

	/**
	 * Call DependencyModule.createStructViaCallback() with the given x and y values,
	 * and return the Point2d created.
	 */
	getPointFromDependencyModuleViaCallback(x: int, y: int): Point2d;

	/**
	 * Construct a new Point3d with the given values, and pass it to the callback.
	 */
	returnPointViaCallback(x: int, y: int, z: int, callback: (Point3d) -> void): void;

	/**
	 * Call into external dependency to get its version.
	 */
	getExternalDependencyVersion(): string;

}
