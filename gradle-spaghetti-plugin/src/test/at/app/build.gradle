apply plugin: "spaghetti-haxe"

configurations {
	requirejs
	main { extendsFrom modules }
}

dependencies {
	modules project(path: ":text-renderer", configuration: "modules")
	modulesObf project(path: ":text-renderer", configuration: "modulesObf")
	requirejs "org.webjars:requirejs:2.1.8"

	test group: "haxelib3", name: "hamcrest", version: "1.2.1"
	test group: "haxelib3", name: "mconsole", version: "1.6.0"
	test group: "haxelib3", name: "mcover", version: "2.0.3"
	test group: "haxelib3", name: "mlib", version: "2.0.2"
	test group: "haxelib3", name: "munit", version: "2.1.0"
	test group: "haxelib3", name: "tink_core", version: "1.0.0-beta4"
	test group: "haxelib3", name: "tink_macro", version: "0.1.1-beta"
	test group: "haxelib3", name: "mockatoo", version: "2.1.1-haxe31"
}

spaghetti {
	platform "haxe"
}

haxe {
	include "prezi.test.client"
	targetPlatforms {
		js
	}
}

sources {
	main {
		haxe {
			source.srcDir generateHeaders.outputDirectory
			builtBy generateHeaders
		}
	}
}

task bundleModule(type: com.prezi.spaghetti.gradle.BundleModule) {
	inputFile compileJs.outputFile
}

task bundleApplication(type: com.prezi.spaghetti.gradle.BundleApplication) {
	dependsOn bundleJsModule
	applicationModule bundleModule.outputDirectory
	mainModule "prezi.test.client"
}

def testWebappDir = file("${buildDir}/webapp")

task packApplication(type: Copy) {
	dependsOn bundleApplication
	dependsOn configurations.requirejs

	destinationDir testWebappDir

	from bundleApplication.outputDirectory
	from "src/test/webapp"

	doLast {
		configurations.requirejs.files.each { zipFile ->
			zipTree(zipFile).each { file ->
				if (file.name == "require.js") {
					def output = new File(testWebappDir, "require.js")
					output << file.text
				}
			}
		}
	}
}
