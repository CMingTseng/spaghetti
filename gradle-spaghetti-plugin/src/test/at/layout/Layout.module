/**
 * Layout module.
 */
module prezi.graphics.text.Layout

extern UnicodeString

/**
 * Different types of character styles.
 */
enum CharacterStyleType {
	/**
	 * This takes an int.
	 */
	COLOR

	/**
	 * A string with the name of the font family.
	 */
	FONT_FAMILY

	/**
	 * This one can be "italic" or "normal".
	 */
	FONT_STYLE

	/**
	 * Something like "condensed", or our favorite: "normal".
	 */
	FONT_STRETCH

	/**
	 * The ever so famous "bold" (or "normal").
	 */
	FONT_WEIGHT

	/**
	 * This'll be a bool.
	 */
	UNDERLINE

	/**
	 * Again, a bool saying whether or not the text is an URL.
	 */
	URL
}

struct CharacterStyle {
	/**
	 * The type of the style.
	 */
	CharacterStyleType type
	/**
	 * The value of the style.
	 */
	@mutable any value
}

interface AbstractText {
	void insert(int offset, UnicodeString text, @nullable CharacterStyle[] withStyles)
	void delete(int offset, int end)
}

/**
 * Describes a block of text.
 */
interface Text extends AbstractText {
	/**
	 * Inserts the given string at <code>offset</code>.
	 */
	UnicodeString getRawText()
}

extern interface HTMLCanvasElement

/**
 * Stuff here only to test code generation features.
 */
interface TestStuff<Pre, Post> {
	void registerCallback(string->void callback)
	string doSomething(Pre pre, string text, Post post)
	void drawSomething(HTMLCanvasElement canvas)
}

Text createText()
TestStuff<string, string> createTestStuff()
