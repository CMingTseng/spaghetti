dependencies {
	compile gradleApi()
	compile project(path: ":spaghetti-core")

	// Required only for the incubating stuff brought over from Gradle 2.0
	compile "commons-lang:commons-lang:2.6"
	compile "commons-io:commons-io:2.4"

	// Add all support projects
	compile rootProject.subprojects.findAll { it.name ==~ /spaghetti-.*-support/ }
}

task run(type: Exec) {
	// Make sure we install all dependencies
	dependsOn install
	configurations.runtime.allDependencies.withType(ProjectDependency).all { ProjectDependency projectDep ->
		dependsOn projectDep.dependencyProject.getTasksByName("install", false)
	}
	workingDir "src/test/at"
	commandLine = ["gradle", "clean", "packApplication", "-is", "--no-daemon"]
}

task compileTsAstParser {

	def outputDir = new File(project.buildDir, "typescript")
	def outputFile = new File(outputDir, "tsAstParser.js")
	def inputFile = project.file("src/main/ts/tsAstParser.ts")

	outputs.file outputFile
	inputs.file inputFile

	doLast {
		copy {
			from "src/main/ts/"
			into outputDir
		}

		exec {
			workingDir outputDir
			commandLine "npm", "install"
		}

		exec {
			workingDir outputDir
			executable new File(outputDir, "node_modules/typescript/bin/tsc")
		}
	}
}

processResources.dependsOn compileTsAstParser
processResources.from compileTsAstParser.outputs.files
